name: Release

on:
  push:
    tags:
      - "v*.*.*"
      - "nightly"

env:
  BUILD_TYPE: Release

jobs:
  windows-build:
    name: "Build on Windows with Spinnaker SDK"
    runs-on:
      - self-hosted
      - spinnaker
      - BFLY-U3-23S6M-C # for tests
      - ORX-10GS-51S5M-C # for tests
      - windows

    permissions:
      actions: write

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - name: Enable long paths
        run: |
          git config --global core.longpaths true
        shell: pwsh

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Get CMake 3.24
        uses: lukka/get-cmake@latest
        with:
          useCloudCache: false
          useLocalCache: true
          cmakeVersion: 3.24.3

      - name: Install MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64_x86

      - name: Build
        run: |
          cmake -B ${{github.workspace}}/test -DCMAKE_BUILD_TYPE=Release
          cmake --build ${{github.workspace}}/test --config Release

      - name: Test  # don't release unless tests pass
        working-directory: ${{github.workspace}}/test
        run: |
          ctest -C Release -L anyplatform --output-on-failure
          ctest -C Release -L acquire-driver-spinnaker --output-on-failure

      - name: CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release -DNOTEST=1

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build --config Release
          cpack --config ${{github.workspace}}/build/CPackConfig.cmake -C Release -G ZIP

      - uses: actions/upload-artifact@v3
        with:
          name: Windows Release binaries
          path: ${{github.workspace}}/*.zip

  linux-build:
    name: "Build on Ubuntu"
    runs-on:
      - ubuntu-latest

    permissions:
      actions: write

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release -DNOTEST=1

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build --config Release
          cpack --config ${{github.workspace}}/build/CPackConfig.cmake -C Release -G ZIP

      - uses: actions/upload-artifact@v3
        with:
          name: ubuntu-latest Release binaries
          path: ${{github.workspace}}/*.zip

  mac-build:
    name: "Build on Mac"
    runs-on: macos-latest

    permissions:
      actions: write

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release -DNOTEST=1 -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"

      - name: Build
        run: |
          cmake --build ${{github.workspace}}/build --config Release
          cpack --config ${{github.workspace}}/build/CPackConfig.cmake -C Release -G ZIP

      - uses: actions/upload-artifact@v3
        with:
          name: macos-latest Release binaries
          path: ${{github.workspace}}/*.zip

  release:
    needs:
      - windows-build
      - linux-build
      - mac-build
    name: "Release"
    runs-on: "ubuntu-latest"

    permissions: write-all

    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        id: download
        with:
          path: ${{ github.workspace }}/artifacts

      - name: Tagged release
        if: ${{ github.ref_name != 'nightly' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ github.token }}
          prerelease: false
          files: |
            ${{steps.download.outputs.download-path}}/*/*.zip

      - name: Nightly release
        if: ${{ github.ref_name == 'nightly' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.PAT }}
          automatic_release_tag: "nightly"
          prerelease: true
          title: "Nightly Release"
          files: |
            ${{steps.download.outputs.download-path}}/*/*.zip
